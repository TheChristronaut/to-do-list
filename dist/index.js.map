{"mappings":"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","sources":["src/index.js","src/project.js","src/task.js"],"sourcesContent":["import { createProject, displayTasks } from \"./project\";\nimport { projectBoard } from \"./project\";\nimport { addTask } from \"./task\";\n\nconst addTaskForm = document.querySelector('#create-task-dialog');\nconst createProjectBtn = document.querySelector('#create-project-btn');\nconst newTaskBtn = document.querySelector('#new-task-btn');\nconst closeFormBtn = document.querySelector('#close-form');\nconst submitFormBtn = document.querySelector('#submit-form');\n\n// Add listener to the create project button\ncreateProjectBtn.addEventListener('click', (event) => {\n    event.preventDefault();\n\n    const projectNameInput = document.querySelector('#project-name-input').value;\n\n    createProject(projectNameInput);\n\n    document.querySelector('#project-name-input').value = '';\n\n    console.log(projectBoard);\n});\n\n// Add listener to the new task button\nnewTaskBtn.addEventListener(\"click\", () => {\n    addTaskForm.showModal();\n});\n\n// Add listener to the close button\ncloseFormBtn.addEventListener(\"click\", () => {\n    addTaskForm.close();\n});\n\n// Add listener to the submit button \nsubmitFormBtn.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n\n    const nameInput = document.querySelector('#task-name').value;\n    const descriptionInput = document.querySelector('#task-description').value;\n    const dueDateInput = document.querySelector('#due-date').value;\n    const priorityInput = document.querySelector('#task-priority').value;\n    const projectNameTaskInput = document.querySelector('#project-name').value;\n\n    addTask(nameInput, descriptionInput, dueDateInput, priorityInput, projectNameTaskInput);\n\n    const projectIndex = projectBoard.findIndex(project => project.name === projectNameTaskInput);\n    \n    if (projectIndex !== -1) {\n        displayTasks(projectIndex);\n    } else {\n        console.error('Project not found!');\n    }\n\n    document.querySelector('#task-name').value = '';\n    document.querySelector('#task-description').value = '';\n    document.querySelector('#due-date').value = '';\n    document.querySelector('#task-priority').value = '';\n    document.querySelector('#project-name').value = '';\n\n    addTaskForm.close();\n});","import { deleteTask } from \"./task\";\n\n// Create an empty array to store projects\nexport const projectBoard = [];\n\n// Function to create a new project\nexport function createProject(projectNameInput) {\n    const project = {\n        name: projectNameInput,\n        tasks: [],\n    };\n\n    projectBoard.push(project);\n\n    generateProjectBoard();\n\n    console.log(project.name, \"added successfully!\");\n}\n\n// Function to put Projects into the UI\nfunction generateProjectBoard() {\n    const sidePanel = document.querySelector('#project-board');\n    sidePanel.textContent = '';\n\n    const dropDown = document.querySelector('#project-name');\n    dropDown.textContent = '';\n    \n    projectBoard.forEach((project, index) => {\n        const projectDiv = document.createElement('div');\n        projectDiv.classList.add('project-div');\n        const projectTab = document.createElement('div');\n        projectTab.classList.add('project-tab');\n        projectTab.textContent = project.name;\n        projectTab.addEventListener(\"click\", () => {\n            displayTasks(index);\n        });\n\n        const deleteButton = document.createElement('button');\n        deleteButton.classList.add('project-delete-btn');\n        deleteButton.textContent = 'Delete';\n        deleteButton.addEventListener(\"click\", () => {\n            deleteProject(index);\n        });\n\n        projectDiv.appendChild(deleteButton);\n        projectDiv.appendChild(projectTab);\n\n        addProjectToForm(project, dropDown);\n        sidePanel.appendChild(projectDiv);\n    });\n};\n\nfunction deleteProject(index) {\n    projectBoard.splice(index, 1);\n    generateProjectBoard();\n}\n\n// Add projects to task form dropdown\nfunction addProjectToForm (project, dropDown) {\n    const option = document.createElement('option');\n    option.text = project.name;\n\n    dropDown.add(option);\n};\n\n// Display project tasks\nexport function displayTasks(projectIndex) {\n    const mainPanel = document.querySelector('#main-content');\n    mainPanel.textContent = '';\n\n    const projectTitle = document.createElement('h1');\n    projectTitle.textContent = projectBoard[projectIndex].name;\n    mainPanel.appendChild(projectTitle);\n\n    const tasks = projectBoard[projectIndex].tasks;\n\n    tasks.forEach((task, index) => {\n        const taskCard = document.createElement('div');\n        taskCard.classList.add('task-card');\n        \n        const taskTitle = document.createElement('h2');\n        taskTitle.textContent = `${task.name}`;\n        taskTitle.classList.add('task-card-title');\n\n        const taskDescription = document.createElement('p');\n        taskDescription.textContent = 'Description: ' + `${task.description}`;\n        taskDescription.classList.add('task-card-description');\n\n        const taskDueDate = document.createElement('h3');\n        taskDueDate.textContent = 'Due by: ' + `${task.dueDate}`;\n        taskDueDate.classList.add('task-card-due-date');\n\n        const taskPriority = document.createElement('h3');\n        taskPriority.textContent = 'Priority level: ' + `${task.priority}`;\n        taskPriority.classList.add('task-card-priority');\n\n        const completeButton = document.createElement('button');\n        completeButton.textContent = 'Complete';\n        completeButton.classList.add('task-complete-btn');\n        completeButton.addEventListener('click', () => {\n            taskCard.classList.add('completed');\n        });\n\n        const deleteButton = document.createElement('button');\n        deleteButton.textContent = 'Delete';\n        deleteButton.classList.add('task-delete-btn');\n        deleteButton.addEventListener('click', () => {\n            projectBoard[projectIndex].tasks.splice(index, 1);\n            displayTasks(projectIndex);\n        });\n\n        taskCard.appendChild(taskTitle);\n        taskCard.appendChild(taskDescription);\n        taskCard.appendChild(taskDueDate);\n        taskCard.appendChild(taskPriority);\n        taskCard.appendChild(deleteButton);\n        taskCard.appendChild(completeButton);\n\n        taskCard.dataset.bookIndex = projectBoard[projectIndex].tasks.length -1;\n\n        mainPanel.appendChild(taskCard);\n    });\n};","import { projectBoard } from \"./project\";\n\nexport function addTask(nameInput, descriptionInput, dueDateInput, priorityInput, projectNameTaskInput) {\n    let project = projectBoard.find(p => p.name === projectNameTaskInput);\n\n    if (project) {\n        let task = {\n            name: nameInput,\n            description: descriptionInput,\n            dueDate: dueDateInput,\n            priority: priorityInput,\n        };\n\n        console.log(task);\n\n        project.tasks.push(task);     \n        \n    };\n};"],"names":[],"version":3,"file":"index.js.map"}